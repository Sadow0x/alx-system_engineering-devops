#!/usr/bin/env bash
# Script to display information about server subdomains

# Exit immediately if any command fails
set -e

# Function to fetch DNS information for a subdomain
get_dns_info() {
    local domain="$1"
    local subdomain="$2"
    
    # Fetch DNS information
    local dns_result=$(dig "$subdomain.$domain" +short)
    
    # Check if DNS information is found
    if [ -n "$dns_result" ]; then
        local record_type=$(dig "$subdomain.$domain" | awk '/ANSWER SECTION/{getline; print $4}')
        echo "The subdomain $subdomain is a $record_type record and points to $dns_result"
    else
        echo "No information found for subdomain $subdomain"
    fi
}

# Main function
main() {
    # Check for correct number of arguments
    if [ "$#" -lt 1 ]; then
        echo "Usage: $0 <domain> [subdomain]"
        exit 1
    fi

    local domain="$1"
    local subdomains=("www" "lb-01" "web-01" "web-02")

    # If a specific subdomain is provided, fetch its DNS information
    if [ -n "$2" ]; then
        get_dns_info "$domain" "$2"
    else
        # If no specific subdomain is provided, fetch DNS information for all default subdomains
        for subdomain in "${subdomains[@]}"; do
            if [ "$subdomain" == "www" ]; then
                # Handling special case for 'www' subdomain
                get_dns_info "$domain" "student.$subdomain"
            else
                get_dns_info "$domain" "student.$subdomain"
            fi
        done
    fi
}

# Check if 'dig' command is available
command -v dig >/dev/null 2>&1 || { echo >&2 "The 'dig' command is required but not found. Aborting."; exit 1; }

# Invoke main function with arguments passed to the script
main "$@"
